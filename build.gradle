plugins {
    id 'java'
    id 'antlr'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

group 'me.bristermitten'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    antlr "org.antlr:antlr4:4.8-1"
    implementation "org.antlr:antlr4-runtime:4.8-1"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:4.0.6'
    testImplementation 'io.kotest:kotest-assertions-core-jvm:4.0.6'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-XXLanguage:+InlineClasses", '-Xopt-in=kotlin.RequiresOptIn', '-Xopt-in=kotlin.ExperimentalStdlibApi']
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

generateGrammarSource {
    maxHeapSize = "64m"

    // Keep a copy of generated sources
    doLast {
        println "Copying generated grammar lexer/parser files to main directory."
        copy {
            from "${buildDir}/generated-src/antlr/main"
            into "generated-src/main/java"
        }
    }
}

clean.doLast {
    file('generated-src').deleteDir()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
